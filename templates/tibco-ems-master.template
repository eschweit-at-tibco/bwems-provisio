AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This master template creates a VPC infrastructure for a multi-AZ, multi-tier
  deployment of TIBCO EMS on AWS. It deploys a VPC with bastions. **WARNING**
  This template creates EC2 instances and related resources. You will be billed
  for the AWS resources used if you create a stack from this template. (qs-1o3ifmu3u)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZones
          - VPCCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
      - Label:
          default: Bastion Access Configuration
        Parameters:
          - RemoteAccessCIDR
          - BastionAMIOS
          - BastionInstanceType
      - Label:
          default: TIBCO EMS Server Configuration
        Parameters:
          - KeyPairName
          - EMSInstallerName
          - EMSServerAMIType
          - EMSServerInstanceType
          - EMSServerPort
      - Label:
          default: TIBCO EMS Client Configuration
        Parameters:
          - DeployEMSClientStack
          - EMSClientInstanceType
          - EMSClientAMIType
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionInstanceType:
        default: Bastion Instance Type
      DeployEMSClientStack:
        default: Deploy optional EMS client stack
      EMSClientAMIType:
        default: EMS Client AMI Type
      EMSClientInstanceType:
        default: EMS Client Instance Type
      EMSServerAMIType:
        default: EMS Server AMI Type
      EMSInstallerName:
        default: EMS Installer Package Name
      EMSServerInstanceType:
        default: EMS Server Instance Type
      EMSServerPort:
        default: EMS Server Port Number
      KeyPairName:
        default: SSH Key Name
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public Subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public Subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RemoteAccessCIDR:
        default: Allowed Bastion External Access CIDR
      VPCCIDR:
        default: VPC CIDR
Parameters:
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. Only two
      Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  BastionAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - CentOS-7-HVM
      - Ubuntu-Server-14.04-LTS-HVM
      - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  DeployEMSClientStack:
    Type: String
    Description: Deploy the TIBCO EMS client stack
    AllowedValues:
        - 'true'
        - 'false'
    Default: 'true'
  EMSClientAMIType:
    AllowedValues:
      - Amazon-Linux2-HVM
      - RHEL-7.5_HVM_GA
    Default: Amazon-Linux2-HVM
    Description: Client Operating System to use - Amazon Linux2 or Red Hat
    Type: String
  EMSClientInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
    ConstraintDescription: Must contain valid instance type
    Default: t2.medium
    Description: Type of EC2 instance for the EMS Client instances
    Type: String
  EMSInstallerName:
    Type: String
    Description: >-
      Name of the TIBCO EMS Installation archive downloaded from TIBCO eDelivery
      site
    Default: TIB_ems_8.4.1_linux_x86_64.zip
  EMSServerAMIType:
    AllowedValues:
      - Amazon-Linux2-HVM
      - RHEL-7.5_HVM_GA
    Default: Amazon-Linux2-HVM
    Description: Server Operating System to use - Amazon Linux or Red Hat
    Type: String
  EMSServerInstanceType:
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
    ConstraintDescription: Must contain valid instance type
    Default: t2.large
    Description: Type of EC2 instance for the EMS Server instances
    Type: String
  EMSServerPort:
    AllowedPattern: '^[0-9]*$'
    Description: Will be used for both EMS server instances
    Type: String
    MinLength: '4'
    MaxLength: '5'
    Default: 7222
  KeyPairName:
    Description: >-
      The name of an existing public/private key pair, which allows you to
      securely connect to your instance after it launches
    Type: 'AWS::EC2::KeyPair::KeyName'
  PrivateSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: eschweit-bwems
    Description: >-
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot
      start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: >-
      The CIDR IP range that is permitted to access the bastions. We recommend
      that you set this value to a trusted IP range.
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
Rules:
  KeyPairsNotEmpty:
    Assertions:
      - Assert: !Not
          - 'Fn::EachMemberEquals':
              - 'Fn::RefAll': 'AWS::EC2::KeyPair::KeyName'
              - ''
        AssertDescription: All key pair parameters must not be empty
  SubnetsInVPC:
    Assertions:
        -
            Assert:
                'Fn::EachMemberIn':
                    -
                        'Fn::ValueOfAll':
                            - 'AWS::EC2::Subnet::Id'
                            - VpcId
                    -
                        'Fn::RefAll': 'AWS::EC2::VPC::Id'
            AssertDescription: All subnets must exist in the VPC
  EFSSupportedRegionRule:
    Assertions:
      - Assert:
          Fn::Contains:
          - - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - eu-west-1
            - ap-southeast-2
            - ap-northeast-1
            - ap-northeast-2
            - eu-central-1
          - !Ref AWS::Region
        AssertDescription: This Quick Start utilizes Amazon EFS which is only available
          in the us-east-1 (N. Virginia), us-east-2 (Ohio), us-west-1 (N. California), us-west-2 (Oregon), eu-west-1 (Ireland),
          eu-central-1 (Frankfurt), ap-northeast-1 (Tokyo), ap-northeast-2 (Seoul), and ap-southeast-2 (Sydney) regions. Please launch the stack in
          one of these regions
Conditions:
  IncludeEMSClientStack:
    !Equals
    - !Ref DeployEMSClientStack
    - 'true'
Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/aws-vpc/templates/aws-vpc.template
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref AvailabilityZones
        KeyPairName: !Ref KeyPairName
        NumberOfAZs: '2'
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        VPCCIDR: !Ref VPCCIDR
  BastionStack:
    DependsOn: VPCStack
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/linux-bastion/templates/linux-bastion.template
      Parameters:
        BastionAMIOS: !Ref BastionAMIOS
        BastionInstanceType: !Ref BastionInstanceType
        KeyPairName: !Ref KeyPairName
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Sub '${QSS3KeyPrefix}submodules/linux-bastion/'
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        VPCID: !GetAtt VPCStack.Outputs.VPCID
  EMSStack:
    DependsOn:
      - VPCStack
      - BastionStack
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/tibco-ems.template
      Parameters:
        BastionSecurityGroupID: !GetAtt BastionStack.Outputs.BastionSecurityGroupID
        DeployEMSClientStack: !Ref DeployEMSClientStack
        EMSClientAMIType: !Ref EMSClientAMIType
        EMSClientInstanceType: !Ref EMSClientInstanceType
        EMSInstallerName: !Ref EMSInstallerName
        EMSS3BucketName: !Ref EMSS3BucketName
        EMSServerAMIType: !Ref EMSServerAMIType
        EMSServerInstanceType: !Ref EMSServerInstanceType
        EMSServerPort: !Ref EMSServerPort
        KeyPairName: !Ref KeyPairName
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !GetAtt VPCStack.Outputs.PublicSubnet2ID
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        VPCCIDR: !Ref VPCCIDR
        VPCID: !GetAtt VPCStack.Outputs.VPCID
Outputs:
  BastionSSH:
    Description: SSH command for accessing bastion with SSH agent forwarding enabled. Remove .pem if needed
    Value: !Sub 'ssh -i ~/.ssh/${KeyPairName}.pem -A ec2-user@${BastionStack.Outputs.EIP1}'
  EMSEFSID:
    Description: EMS EFS ID (For Backup Purposes)
    Value: !GetAtt EMSStack.Outputs.EMSEFSID
  EMSServer1CP:
    Description: EMS Server 1 Connection Point
    Value: !GetAtt EMSStack.Outputs.EMSServer1CP
  EMSServer1SSH:
    Description: SSH command for accessing EMS Server 1 (assumes via the Bastion host with SSH agent forwarding enabled)
    Value: !GetAtt EMSStack.Outputs.EMSServer1SSH
  EMSServer2CP:
    Description: EMS Server 2 Connection Point
    Value: !GetAtt EMSStack.Outputs.EMSServer2CP
  EMSServer2SSH:
    Description: SSH command for accessing EMS Server 2 (assumes via the Bastion host with SSH agent forwarding enabled)
    Value: !GetAtt EMSStack.Outputs.EMSServer2SSH

